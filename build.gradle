plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    // RESTDocs
    id "org.asciidoctor.jvm.convert" version "3.3.2"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '11'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    // RESTDocs
    asciidoctorExt
}

repositories {
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL
    runtimeOnly 'com.mysql:mysql-connector-j'

    // AWS S3
    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.526'
    testImplementation 'com.amazonaws:aws-java-sdk-s3:1.12.526'

    // RESTDocs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.rest-assured:rest-assured:4.5.1'
    testImplementation 'com.squareup.okhttp3:okhttp:4.0.1'
    testImplementation 'com.squareup.okhttp3:mockwebserver:4.0.1'
}

/** Git Submodules start **/
processResources.dependsOn('copySecurity')

tasks.register('copySecurity', Copy) {
    description = 'Copy submodules to project'

    from('./src/main/resources/security') {
        include('*.yml')
    }
    into('src/main/resources')
}
/** Git Submodules end **/

tasks.named('test') {
    useJUnitPlatform()
}

/** RestDocs Start **/
ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    outputs.dir snippetsDir
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
    baseDirFollowsSourceFile()
}

bootJar {
    dependsOn asciidoctor

    from("${asciidoctor.outputDir}") {
        into 'src/main/resources/static/docs'
    }
}
/** RestDocs End **/
